import math

class Point:
    def __init__(self, x=0, y=1):
        self.__x = x
        self.__y = y

    def read(self):
        inputs = input().split()
        self.__x = int(inputs[0])
        self.__y = int(inputs[1])

    def print(self):
        print(f"({self.__x}, {self.__y})", end='')

    def move(self, dx, dy):
        self.__x += dx
        self.__y += dy

    def getX(self):
        return self.__x

    def getY(self):
        return self.__y

    def setXY(self, x, y):
        self.__x = x
        self.__y = y

    def distance(self, P=None):
        if P is None:
            return math.sqrt(self.__x**2 + self.__y**2)
        else:
            return math.sqrt((self.__x - P.getX())**2 + (self.__y - P.getY())**2)
class ColorPoint(Point):
    def __init__(self, x=None, y=None, color=None):
        if x is None and y is None and color is None:
            super().__init__()
            self.__color = "xanh"
        else:
            super().__init__(x, y)
            self.__color = color

    def __copy__(self):
        return ColorPoint(self.getX(), self.getY(), self.__color)

    def __init_copy__(self, cp):
        super().__init__(cp.getX(), cp.getY())
        self.__color = cp.__color

    def read(self):
        inputs = input().split()
        self.setXY(int(inputs[0]), int(inputs[1]))
        self.__color = inputs[2]

    def print(self):
        super().print()
        print(f": {self.__color}")

    def setColor(self, color):
        self.__color = color

    @property
    def color(self):
        return self.__color
class C002454:
    @staticmethod
    def testCase1():
        A = ColorPoint(5, 10, "trắng")
        A.print()
        print("Constructor: PASS")

    @staticmethod
    def testCase2():
        B = ColorPoint()
        B.read()
        B.move(10, 8)
        B.print()

    @staticmethod
    def testCase3():
        C = ColorPoint(6, 3, "đen")
        D = ColorPoint(C.getX(), C.getY(), C.color)  # copy
        D.print()
        D.setColor("vàng")
        D.print()
        C.print()
        print("Constructor: PASS")
        print("Set color: PASS")

    @staticmethod
    def main(*args):
        C002454.testCase1()
        C002454.testCase2()
        C002454.testCase3()

C002454.main()
